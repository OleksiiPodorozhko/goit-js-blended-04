// Завдання 1:
// Дано масив чисел [1, 2, 3, 4, 5]. Створіть новий масив, що містить
// квадрати кожного елементу вхідного масиву.
// Очікуваний результат: [1, 4, 9, 16, 25].

const numbers = [1, 2, 3, 4, 5];


// Завдання 2:
// Дано масив об'єктів. Створіть новий масив, що містить всі значення
// з масивів values кожного об'єкту, збережених в одному масиві.
// Очікуваний результат: [1, 2, 3, 4, 5, 6, 7, 8, 9].

// const data = [
//  { id: 1, values: [1, 2, 3] },
//  { id: 2, values: [4, 5, 6] },
//  { id: 3, values: [7, 8, 9] },
// ];


// Завдання 3:
// Дано масив об'єктів.
// Перевірте, чи є хоча б один об'єкт з віком менше 20 років.
// Очікуваний результат: true.

// const people = [
//  { name: 'John', age: 27 },
//  { name: 'Jane', age: 31 },
//  { name: 'Bob', age: 19 },
// ];


// Завдання 4:
// Дано масив чисел [2, 4, 6, 8, 10].
// Перевірте, чи є кожен елемент масиву парним. Очікуваний результат: true.

// const numbers = [2, 4, 6, 8, 10];


// Завдання 5:
// Знайдіть перше непарне число
// const numbers = [2, 1, 6, 8, 9, 10, 12];


// Завдання 6:
// Відсортуйте масив чисел [4, 2, 5, 1, 3]
// у порядку зростання. Очікуваний результат: [1, 2, 3, 4, 5].

// const numbersArray = [4, 2, 5, 1, 3];


// Завдання 7:
// Відсортуйте масив рядків ["banana", "orange", "apple", "pear"]
// у порядку алфавіту.
// Очікуваний результат: ["apple", "banana", "orange", "pear"].

// const stringArray = ['banana', 'orange', 'apple', 'pear'];


// Завдання 8:
// Відсортуйте масив об'єктів за віком у порядку зростання.
// Очікуваний результат: [{name: "Bob", age: 19}, {name: "John", age: 27}, {name: "Jane", age: 31}].

// const users = [
//  { name: 'John', age: 27 },
//  { name: 'Jane', age: 31 },
//  { name: 'Bob', age: 19 },
// ];


// Завдання 9:
// Дано масив об'єктів.
// Створіть новий масив, що містить тільки об'єкти, в яких
// вік більше 20 років.
// Очікуваний результат: [{name: "John", age: 27}, {name: "Jane", age: 31}]

// const user = [
//  { name: 'John', age: 27 },
//  { name: 'Jane', age: 31 },
//  { name: 'Bob', age: 19 },
// ];


// Завдання 10:
// Дано масив чисел [1, 2, 3, 4, 5].
// Застосуйте метод для обчислення суми елементів масиву.

// const numbers = [1, 2, 3, 4, 5];


// Завдання 11:
// Розроби клас Calculator, який дозволяє виконувати арифметичні
// операції над числом за допомогою методів класу, підтримуючи
// ланцюжковий виклик (method chaining).
//
// Вимоги до класу Calculator:
// - Метод number(value) – встановлює початкове значення для обчислень.
// - Метод getResult() – повертає поточний результат.
// - Метод add(value) – додає число.
// - Метод subtract(value) – віднімає число.
// - Метод multiply(value) – множить.
// - Метод divide(value) – ділить (з перевіркою на 0).
// Усі методи (крім getResult) повертають this для chain-викликів.
//
// Приклад використання:
// const calc = new Calculator();
// const result = calc.number(10).add(5).subtract(3).multiply(4).divide(2).getResult();
// console.log(result); // 24


// Завдання 12:
// Напиши клас Client, який створює об'єкт з властивостями login, email.
// Використай приватні властивості #login та #email,
// доступ через геттери та сеттери.


// Завдання 13:
// Наслідування у класах!
// Створіть клас Person з властивостями name, age, gender, email
// і методом getDetails(), що повертає об'єкт з даними.
// Створіть клас Employee, який наслідує Person і має властивості
// salary, department та метод getEmployeeDetails(),
// що повертає дані про зарплату та відділ.